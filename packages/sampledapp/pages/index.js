import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import React, { useState, useEffect } from "react";
import { FaceSDK } from "@face/sdk";
import { ethers } from "ethers";

export default function Home() {
  // 아래 nodeUrl을 과제 문서에 설명된 노드의 주소로 세팅해주세요.
  const nodeUrl = "https://ropsten.infura.io/v3/2a4f59ea8b174fb7ae9ed6fae1137e59";
  if (nodeUrl === "") {
    throw new Error("과제 문서를 보고 nodeUrl 값을 채워주세요.");
  }
  const [sdk] = useState(new FaceSDK(nodeUrl));
  const [address, setAddress] = useState("");
  const [balance, setBalance] = useState("");
  const [lastTxHash, setLastTxHash] = useState("");

  useEffect(() => {
    async function dowork() {
      const provider = new ethers.providers.Web3Provider(sdk.getProvider());
      const signer = provider.getSigner();
      const address = await signer.getAddress();
      const balance = ethers.utils.formatEther(
        await provider.getBalance(address)
      );
      setAddress(address);
      setBalance(balance);
    }
    dowork();
  }, []);

  async function sendTxButtonClicked() {
    const provider = new ethers.providers.Web3Provider(sdk.getProvider());
    const signer = provider.getSigner();
    let txRequest = {
      to: address,
      value: ethers.utils.parseEther("0.1"),
    };
    txRequest = await signer.populateTransaction(txRequest);
    console.log(txRequest);
    const tx = await signer.sendTransaction(txRequest);
    console.log(tx);
    setLastTxHash(tx.hash);
    const receipt = await tx.wait();
    console.log(receipt);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Sample DApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Sample DApp</h1>

        <p className={styles.description}>
          Address is <code className={styles.code}>{address}</code>
        </p>
        <p className={styles.description}>Balance is {balance}</p>

        <button onClick={sendTxButtonClicked}>Send Tx</button>

        {lastTxHash !== "" && (
          <>
            <p className={styles.description}>Last Sent Tx is {lastTxHash}</p>
            <p className={styles.description}>
              Find it in{" "}
              <a href={`https://ropsten.etherscan.io/tx/${lastTxHash}`}>
                {" "}
                etherscan{" "}
              </a>
            </p>
          </>
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
